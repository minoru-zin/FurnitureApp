<Application x:Class="FurnitureApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:FurnitureApp"
             StartupUri="Contents/Orders/Order00100/Order00100_OrderListWindow.xaml">
    <Application.Resources>
        <Style TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="0 0 0 0"/>
            <Setter Property="Padding" Value="0 0 0 0"/>
        </Style>
        <Style x:Key="BaseTextBlock"
               TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="15"/>
        </Style>
        <Style x:Key="NumberTextBox"
               TargetType="{x:Type TextBox}" 
               BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="InputMethod.IsInputMethodEnabled" Value="False"/>
        </Style>
        <Style x:Key="KanaTextBox"
               TargetType="{x:Type TextBox}" 
               BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="InputMethod.IsInputMethodEnabled" Value="True"/>
            <Setter Property="InputMethod.PreferredImeState" Value="On"/>
            <Setter Property="InputMethod.PreferredImeConversionMode" Value="Katakana"/>
        </Style>
        <Style x:Key="HankakuKanaTextBox"
               TargetType="{x:Type TextBox}" 
               BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="InputMethod.IsInputMethodEnabled" Value="True"/>
            <Setter Property="InputMethod.PreferredImeState" Value="On"/>
            <Setter Property="InputMethod.PreferredImeConversionMode" Value="Katakana,Native"/>
        </Style>
        <Style x:Key="HiraganaTextBox"
               TargetType="{x:Type TextBox}" 
               BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="InputMethod.IsInputMethodEnabled" Value="True"/>
            <Setter Property="InputMethod.PreferredImeState" Value="On"/>
            <Setter Property="InputMethod.PreferredImeConversionMode" Value="FullShape,Native"/>
        </Style>


        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="FontSize" Value="15"/>
        </Style>
        <Style x:Key="Display" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="IsEnabled" Value="False"/>
            <Setter Property="Height" Value="26"/>
        </Style>
        <Style TargetType="{x:Type DatePicker}" x:Key="IconOnlyDatePicker">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="IsTabStop" Value="False"/>
        </Style>
        <Style TargetType="{x:Type StackPanel}" x:Key="DateStackPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Width" Value="125"/>
            <Setter Property="Height" Value="23"/>
            <Style.Resources>
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource NumberTextBox}">
                    <Setter Property="Width" Value="100"/>
                </Style>
                <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource IconOnlyDatePicker}"/>
            </Style.Resources>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="3"/>
        </Style>
        <Style x:Key="CaptionTextBlock" TargetType="{x:Type TextBlock}">
        </Style>
        <Style x:Key="ValueTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Background" Value="AliceBlue"/>
        </Style>

        <Style TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="LightBlue"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="LightBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="CanUserSortColumns" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="HorizontalGridLinesBrush" Value="AliceBlue"/>
            <Setter Property="VerticalGridLinesBrush" Value="AliceBlue"/>
        </Style>
        <!--<Style TargetType="{x:Type DataGridCell}" x:Key="RightDataGridCell">
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        </Style>-->

        <Style TargetType="{x:Type DataGridCell}" x:Key="ResultDataGridCell">
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="LightBlue"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="LightBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="ResultDataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type DataGridRowHeader}" x:Key="ResultDataGridRowHeader">
            <Setter Property="Content" Value="{Binding [0]}"/>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type DataGrid}" x:Key="ResultDataGrid">
            <Setter Property="HorizontalGridLinesBrush" Value="AliceBlue"/>
            <Setter Property="VerticalGridLinesBrush" Value="AliceBlue"/>
            <Setter Property="AutoGenerateColumns" Value="True"/>
            <Setter Property="HeadersVisibility" Value="All"/>
            <Setter Property="CanUserSortColumns" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CellStyle" Value="{StaticResource ResultDataGridCell}"/>
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource ResultDataGridColumnHeader}"/>
            <Setter Property="RowHeaderStyle" Value="{StaticResource ResultDataGridRowHeader}"/>
        </Style>
    </Application.Resources>
</Application>
